<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.zara.mapper.MemberMapper">

	<!--  로그인 성공 시 회원 정보 가져오기 -->
	<select id="getMember" parameterType="Map" resultType="com.project.zara.model.MemberVO">
		select * from member where mem_id=#{mem_id} AND mem_password = #{mem_password}
	</select>
	
	<!--  로그인 성공 시 마지막 로그인 일자 업데이트 하기 -->
	<update id="updateLoginDate" parameterType="string">
		update member 
		set	
			last_login = sysdate
	    where 
		    mem_id=#{mem_id} 
	</update>
	
	<!--  회원가입  -->
	
	<insert id="doRegister" parameterType="map" useGeneratedKeys="true" keyProperty="mem_id">
	
		insert into member VALUES(
		#{id},
		#{password},
		#{name},
		#{tel},
		#{email},
		#{mem_zip},
		#{mem_road},
		#{mem_adrdetail},
		#{gender},
		sysdate,
		null,
		null,
		'N',
		null,
		0
		)
	
	</insert>
	
	<!--  아이디 중복 체크  -->
	
	<select id="checkId" parameterType="String" resultType="String">
		select count(*) from member where mem_id = #{id}
	</select>
	
	<!--  회원 정보 Update 실시  -->
	<update id="doUpdate" parameterType="Map" >
		update member 
		set
			mem_password = #{change_password},
			mem_name = #{name},
			mem_tel = #{tel},
			mem_email = #{email},
			mem_zip = #{mem_zip},
			mem_road = #{mem_road},
			mem_adrdetail = #{mem_adrdetail}, 
			gender = #{gender},
			update_at = sysdate
		where 
			mem_id = #{id}
	</update>
	
	<!--  회원 정보 삭제 -->
	<delete id= "doDelete" parameterType = "String">
	
		DELETE FROM member
		WHERE
		mem_id = #{id}
	
	</delete>
	
	<!--  아이디 찾기 -->
	<select id="findId" parameterType="map" resultType="String">
		select mem_id from member where mem_name =#{name} and mem_tel = #{tel}
	
	</select>
	
	<select id="findPassword" parameterType="map" resultType="String">
		select mem_password from member where mem_id =#{id} and mem_name = #{name} and mem_tel = #{tel} 
	</select>
</mapper>