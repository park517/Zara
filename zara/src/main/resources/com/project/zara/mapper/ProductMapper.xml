<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.zara.mapper.ProductMapper">

	<!--   판매글 등록 -->
	<insert id="insertProduct" parameterType="ProductVO" keyColumn="pno" keyProperty="pno" useGeneratedKeys="true">
		insert into
		product (
			pno,
			mem_no,
			pro_category,
			pro_name,
			pro_price,
			pro_info,
			pro_point,
			pro_stock,
			pro_weight,
			pro_com,
			pro_status,
			pro_date,
			pro_sum,
			del_yn,
			pro_hit
		)
		values (
			seq_product.nextval,
			#{mem_no},
			#{pro_category},
			#{pro_name},
			#{pro_price},
			#{pro_info},
			#{pro_point},
			#{pro_stock},
			#{pro_weight},
			#{pro_com},
			#{pro_status},
			sysdate,
			#{pro_sum},
			'N',
			0
		)
	</insert>
	
	<!--  판매글 전체 갯수 -->
	<select id="selectRowCount" resultType="int">
		select count(*) from product
	</select>
	
	<!--  판매글 가져오기 (페이징) -->
	<select id="getProductList" resultType="ProductVO" parameterType="map">
		SELECT B.*,m.mem_id
		FROM (SELECT ROWNUM RN,A.*
				FROM (SELECT * FROM product
					  ORDER BY pno DESC) A 
				) B ,member m
		WHERE RN BETWEEN #{start} AND #{end} and B.mem_no  = m.mem_no
	</select>
	
	<!--  판매글 상세조회  -->
	<select id="getProduct" parameterType="int" resultType="ProductVO">
		select * 
		from product
		where pno = #{pno}
	</select>
	
	<!--  조회 수 증가 -->
	<update id="hitUp" parameterType="int" >
		UPDATE product 
		SET pro_hit=pro_hit+1 
		WHERE pno=#{pno}
	</update>
	
	<!--  정보 수정 -->
	<update id="updateProduct" parameterType="ProductVO">
		UPDATE product
		SET
			pro_category = #{pro_category},
			pro_name = #{pro_name},
			pro_price = #{pro_price},
			pro_info = #{pro_info},
			pro_stock = #{pro_stock},
			pro_weight = #{pro_weight},
			pro_com = #{pro_com},
			update_at = sysdate
			
		WHERE pno = #{pno}	
	</update>
	
	<!-- 글 삭제 -->
	<update id="deleteProduct" parameterType="int">
		update product
		set 
			del_yn ='Y',
			delete_at = sysdate
		where pno = #{pno}
	</update>
	
	<!--  유저별 상품 갯수 가져오기 -->
	<select id="UserProductCount" resultType="int">
		select count(*) from product
		where mem_id = #{mem_id}
	</select>
	
	<!--  유저별 상품 갯수 가져오기 -->
	<select id="getUserProduct" resultType="ProductVO" parameterType="map">
		SELECT *
		FROM (SELECT ROWNUM RN, A.*
				FROM (SELECT * FROM product
					  where mem_id =#{mem_id}
					  ORDER BY pno DESC) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	

</mapper>